{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MenuPage = function MenuPage(props) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showMenu = _useState2[0],\n    setShowMenu = _useState2[1];\n  var toggleMenu = function toggleMenu() {\n    setShowMenu(!showMenu);\n  };\n  return _jsxs(View, {\n    children: [_jsx(TouchableOpacity, {\n      onPress: toggleMenu,\n      children: _jsx(Image, {\n        source: {\n          uri: \"https://www.pinclipart.com/picdir/big/532-5328945_menu-bar-icon-white-clipart-png-download-menu.png\"\n        },\n        style: {\n          width: 30,\n          height: 30,\n          marginRight: 280,\n          marginTop: 40\n        }\n      })\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: showMenu,\n      onRequestClose: toggleMenu,\n      children: _jsxs(View, {\n        style: styles.modalContent,\n        children: [_jsx(TouchableOpacity, {\n          onPress: toggleMenu,\n          children: _jsx(Text, {\n            style: styles.closeButton,\n            children: \"Close\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.navigate('Profile');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Setting\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.navigate('Home');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Logout\"\n          })\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  modalContent: {\n    backgroundColor: 'white',\n    marginLeft: 20,\n    marginTop: 20,\n    padding: 20,\n    borderRadius: 10,\n    width: '40%',\n    maxHeight: '20%',\n    alignItems: 'center'\n  },\n  menuButton: {\n    fontSize: 18,\n    color: 'blue'\n  },\n  closeButton: {\n    fontSize: 16,\n    color: 'red',\n    marginBottom: 10\n  },\n  menuItem: {\n    fontSize: 16,\n    marginVertical: 10\n  }\n});\nexport default MenuPage;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","Image","Modal","StyleSheet","jsx","_jsx","jsxs","_jsxs","MenuPage","props","_useState","_useState2","_slicedToArray","showMenu","setShowMenu","toggleMenu","children","onPress","source","uri","style","width","height","marginRight","marginTop","animationType","transparent","visible","onRequestClose","styles","modalContent","closeButton","navigation","navigate","menuItem","create","backgroundColor","marginLeft","padding","borderRadius","maxHeight","alignItems","menuButton","fontSize","color","marginBottom","marginVertical"],"sources":["D:/Users/project/FrontEnd/QuizApp_01/screens/menuPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {View, Text, TouchableOpacity, Image,Modal,StyleSheet} from 'react-native';\r\n\r\nconst MenuPage = (props:any)=>{\r\n    const [showMenu, setShowMenu] = useState(false);\r\n      \r\n    const toggleMenu = () => {\r\n      setShowMenu(!showMenu);\r\n    };\r\n    return(\r\n        <View>\r\n           <TouchableOpacity onPress={toggleMenu}>\r\n        <Image source={{uri:\"https://www.pinclipart.com/picdir/big/532-5328945_menu-bar-icon-white-clipart-png-download-menu.png\" }} \r\n            style={{width:30,height:30, marginRight:280,marginTop:40,}}/>\r\n      </TouchableOpacity>\r\n\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={showMenu}\r\n        onRequestClose={toggleMenu}\r\n      >\r\n        <View style={styles.modalContent}>\r\n            <TouchableOpacity onPress={toggleMenu}>\r\n              <Text style={styles.closeButton}>Close</Text>\r\n            </TouchableOpacity>\r\n            \r\n            <TouchableOpacity onPress={()=>props.navigation.navigate('Profile')}>\r\n              <Text style={styles.menuItem}>Setting</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={()=>props.navigation.navigate('Home')}>\r\n              <Text style={styles.menuItem}>Logout</Text>\r\n            </TouchableOpacity>\r\n       \r\n          </View>\r\n      </Modal>\r\n        </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    modalContent: {\r\n        backgroundColor: 'white',\r\n        marginLeft:20,\r\n        marginTop:20,\r\n        padding: 20,\r\n        borderRadius: 10,\r\n        width: '40%',\r\n        maxHeight: '20%',\r\n        alignItems: 'center',\r\n      },\r\n    menuButton: {\r\n        fontSize: 18,\r\n        color: 'blue',\r\n      },\r\n      closeButton: {\r\n        fontSize: 16,\r\n        color: 'red',\r\n        marginBottom: 10,\r\n      },\r\n      menuItem: {\r\n        fontSize: 16,\r\n        marginVertical: 10,\r\n      },\r\n})\r\nexport default MenuPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}