{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Title from \"./Title\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DisplayQuestion = function DisplayQuestion(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    questions = _useState2[0],\n    setQuestions = _useState2[1];\n  useEffect(function () {\n    function fetchQuestions() {\n      return _fetchQuestions.apply(this, arguments);\n    }\n    function _fetchQuestions() {\n      _fetchQuestions = _asyncToGenerator(function* () {\n        try {\n          var response = yield axios.get('http://192.168.0.116:3000/questions');\n          setQuestions(response.data);\n        } catch (error) {\n          console.error('Error fetching questions:', error);\n        }\n      });\n      return _fetchQuestions.apply(this, arguments);\n    }\n    fetchQuestions();\n  }, []);\n  if (!questions.length) {\n    return _jsx(Text, {\n      children: \"Loading...\"\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Title, {}), _jsx(Text, {\n      style: {\n        fontSize: 30,\n        fontWeight: '600',\n        marginBottom: 10,\n        color: 'white'\n      },\n      children: \"Questions\"\n    }), _jsx(View, {\n      style: styles.modalView,\n      children: _jsxs(ScrollView, {\n        contentContainerStyle: styles.scrollViewContainer,\n        children: [questions.map(function (question, index) {\n          return _jsxs(View, {\n            children: [_jsx(Text, {\n              style: {\n                fontSize: 18,\n                fontWeight: '500',\n                marginLeft: 8\n              },\n              children: `Q${index + 1}. ${question.question}`\n            }), _jsxs(View, {\n              children: [_jsx(Text, {\n                style: styles.option,\n                children: `a. ${question.option1}`\n              }), _jsx(Text, {\n                style: styles.option,\n                children: `b. ${question.option2}`\n              }), _jsx(Text, {\n                style: styles.option,\n                children: `c. ${question.option3}`\n              }), _jsx(Text, {\n                style: styles.option,\n                children: `d. ${question.option4}`\n              })]\n            })]\n          }, index);\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('SetQuiz');\n          },\n          children: _jsx(Image, {\n            source: {\n              uri: \"https://static.vecteezy.com/system/resources/previews/000/450/402/original/vector-add-icon.jpg\"\n            },\n            style: styles.imageContainer\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            return navigation.navigate('OptionPage');\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Save\"\n          })\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  scrollViewContainer: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 8,\n    marginLeft: 10,\n    marginRight: 10,\n    borderRadius: 10\n  },\n  container: {\n    backgroundColor: '#00798c',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 25,\n    marginLeft: 10,\n    marginRight: 10,\n    borderRadius: 10,\n    height: '100%'\n  },\n  modalView: {\n    marginBottom: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 300,\n    height: 500,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    shadowColor: '#bbb',\n    shadowOpacity: 0.80,\n    elevation: 5\n  },\n  option: {\n    marginRight: 180,\n    marginLeft: 8,\n    fontSize: 15,\n    flexDirection: 'column',\n    width: 100\n  },\n  imageContainer: {\n    height: 40,\n    width: 40,\n    marginStart: 220,\n    marginTop: 0\n  },\n  button: {\n    width: 100,\n    height: 40,\n    backgroundColor: '#00b4d8',\n    padding: 10,\n    borderRadius: 10,\n    marginBottom: 10\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlign: 'center'\n  }\n});\nexport default DisplayQuestion;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","TouchableOpacity","Image","ScrollView","Title","axios","jsx","_jsx","jsxs","_jsxs","DisplayQuestion","_ref","navigation","_useState","_useState2","_slicedToArray","questions","setQuestions","fetchQuestions","_fetchQuestions","apply","arguments","_asyncToGenerator","response","get","data","error","console","length","children","style","styles","container","fontSize","fontWeight","marginBottom","color","modalView","contentContainerStyle","scrollViewContainer","map","question","index","marginLeft","option","option1","option2","option3","option4","onPress","navigate","source","uri","imageContainer","button","buttonText","create","flexGrow","alignItems","justifyContent","marginTop","marginRight","borderRadius","backgroundColor","height","width","shadowColor","shadowOpacity","elevation","flexDirection","marginStart","padding","textAlign"],"sources":["D:/Users/project/FrontEnd/QuizApp_01/screens/DisplayQuestion.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {View, Text,StyleSheet, TouchableOpacity, Image,ScrollView} from 'react-native';\r\nimport Title from './Title';\r\nimport axios from 'axios';\r\n\r\nconst DisplayQuestion = ({navigation}:{navigation:any})=>{\r\n    const [questions, setQuestions] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchQuestions() {\r\n      try {\r\n        const response = await axios.get('http://192.168.0.116:3000/questions');\r\n        setQuestions(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching questions:', error);\r\n      }\r\n    }\r\n\r\n    fetchQuestions();\r\n  }, []);\r\n  if (!questions.length) {\r\n    return <Text>Loading...</Text>; // Display a loading message while fetching questions\r\n  }\r\n    return(\r\n        <View style={styles.container}>\r\n        <Title/>\r\n        <Text style={{fontSize:30, fontWeight:'600', marginBottom:10,color:'white'}}>Questions</Text>\r\n        \r\n        <View style={styles.modalView}>\r\n        <ScrollView contentContainerStyle={styles.scrollViewContainer}>\r\n        {questions.map((question: any, index: number) => (\r\n                <View key={index}>\r\n                    <Text style={{ fontSize: 18, fontWeight: '500', marginLeft: 8 }}>\r\n                        {`Q${index + 1}. ${question.question}`}\r\n                    </Text>\r\n                    <View>\r\n                        <Text style={styles.option}>{`a. ${question.option1}`}</Text>\r\n                        <Text style={styles.option}>{`b. ${question.option2}`}</Text>\r\n                        <Text style={styles.option}>{`c. ${question.option3}`}</Text>\r\n                        <Text style={styles.option}>{`d. ${question.option4}`}</Text>\r\n\r\n                    </View>\r\n                </View>\r\n            \r\n        ))}\r\n          <TouchableOpacity onPress={() => navigation.navigate('SetQuiz')}>\r\n                        <Image source={{\r\n                            uri: \"https://static.vecteezy.com/system/resources/previews/000/450/402/original/vector-add-icon.jpg\"\r\n                        }} style={styles.imageContainer} />\r\n                    </TouchableOpacity>\r\n\r\n        <TouchableOpacity style={styles.button} onPress={()=>navigation.navigate('OptionPage')}>               \r\n        <Text style={styles.buttonText}>Save</Text>\r\n        </TouchableOpacity> \r\n        </ScrollView>\r\n        </View>\r\n        \r\n        </View>\r\n        \r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    scrollViewContainer: {\r\n        flexGrow: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginTop: 8,\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n        borderRadius: 10,\r\n        \r\n      },\r\n    container:{\r\n        backgroundColor: '#00798c',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginTop:25,\r\n        marginLeft:10,\r\n        marginRight:10,\r\n        borderRadius:10,\r\n        height:'100%'\r\n        \r\n       },\r\n       modalView:{\r\n       marginBottom:50,\r\n       justifyContent:'center',\r\n       alignItems:'center', \r\n       width:300,\r\n       height:500,\r\n       backgroundColor:'white',\r\n       borderRadius:20,\r\n       shadowColor:'#bbb',\r\n       shadowOpacity:0.80,\r\n       elevation:5\r\n   },\r\n   option:{\r\n    marginRight:180,\r\n    marginLeft:8,\r\n    fontSize:15,\r\n    flexDirection:'column',\r\n    width:100\r\n   },\r\n   imageContainer:{\r\n    height:40,\r\n    width:40,\r\n    marginStart:220,\r\n    marginTop:0\r\n   },\r\n   button:{\r\n    width:100,\r\n    height:40,\r\n    backgroundColor:'#00b4d8',\r\n    padding:10,\r\n    borderRadius:10,\r\n    marginBottom:10\r\n},\r\nbuttonText:{\r\n    color:'#fff',\r\n    fontSize:15,\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    textAlign:'center'\r\n    \r\n},\r\n})\r\nexport default DisplayQuestion;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}