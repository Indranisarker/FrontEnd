{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Home from \"./screens/Home\";\nimport OptionPage from \"./screens/OptionPage\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LoginPage from \"./screens/LoginPage\";\nimport AnnouncementPage from \"./screens/AnnouncementPage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar App = function App() {\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerShown: false\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"Home\",\n          component: Home\n        }), _jsx(Stack.Screen, {\n          name: \"OptionPage\",\n          component: OptionPage\n        }), _jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginPage\n        }), _jsx(Stack.Screen, {\n          name: \"Announcement\",\n          component: AnnouncementPage\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\nexport default App;","map":{"version":3,"names":["Home","OptionPage","NavigationContainer","createStackNavigator","LoginPage","AnnouncementPage","jsx","_jsx","jsxs","_jsxs","Stack","App","View","style","styles","container","children","Navigator","screenOptions","headerShown","Screen","name","component","StyleSheet","create","flex"],"sources":["D:/Users/project/FrontEnd/QuizApp_01/App.tsx"],"sourcesContent":["//import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport Home from './screens/Home';\nimport OptionPage from './screens/OptionPage';\nimport {NavigationContainer} from '@react-navigation/native';\nimport { createStackNavigator} from '@react-navigation/stack';\n//import {createDrawerNavigator} from '@react-navigation/drawer';\nimport LoginPage from './screens/LoginPage';\nimport AnnouncementPage from './screens/AnnouncementPage';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport {AuthContext, AuthProviders} from './screens/providers/AuthProviders'\n\nconst Stack = createStackNavigator();\n//const Drawer = createDrawerNavigator();\nconst App = ()=> {\n  return (\n    <View style={styles.container}>\n      {/* <AuthProviders>\n        <AuthContext.Consumer>\n          {(auth)=>\n          auth?.isLoggedIn ?(\n            <NavigationContainer>\n            <Stack.Navigator screenOptions={{ headerShown: false }}>\n          <Stack.Screen name='OptionPage' component={OptionPage}/>\n          <Stack.Screen name='Login' component={LoginPage}/>\n          <Stack.Screen name='Announcement' component={AnnouncementPage}/>\n          </Stack.Navigator>  \n        </NavigationContainer>\n          ):(\n            <NavigationContainer>\n              <Stack.Screen name='Home' component={Home}/>\n            </NavigationContainer>\n          )\n       \n}\n      </AuthContext.Consumer>\n      </AuthProviders> */}\n      <NavigationContainer>\n      \n            <Stack.Navigator screenOptions={{ headerShown: false }}>\n            <Stack.Screen name='Home' component={Home}/>\n          <Stack.Screen name='OptionPage' component={OptionPage}/>\n          <Stack.Screen name='Login' component={LoginPage}/>\n          <Stack.Screen name='Announcement' component={AnnouncementPage}/>\n          </Stack.Navigator>  \n        </NavigationContainer>\n          \n     \n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n\n  },\n});\nexport default App;"],"mappings":";;AAGA,OAAOA,IAAI;AACX,OAAOC,UAAU;AACjB,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,SAASC,oBAAoB,QAAO,yBAAyB;AAE7D,OAAOC,SAAS;AAChB,OAAOC,gBAAgB;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAI1D,IAAMC,KAAK,GAAGP,oBAAoB,CAAC,CAAC;AAEpC,IAAMQ,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAQ;EACf,OACEJ,IAAA,CAACK,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAqB5BT,IAAA,CAACL,mBAAmB;MAAAc,QAAA,EAEdP,KAAA,CAACC,KAAK,CAACO,SAAS;QAACC,aAAa,EAAE;UAAEC,WAAW,EAAE;QAAM,CAAE;QAAAH,QAAA,GACvDT,IAAA,CAACG,KAAK,CAACU,MAAM;UAACC,IAAI,EAAC,MAAM;UAACC,SAAS,EAAEtB;QAAK,CAAC,CAAC,EAC9CO,IAAA,CAACG,KAAK,CAACU,MAAM;UAACC,IAAI,EAAC,YAAY;UAACC,SAAS,EAAErB;QAAW,CAAC,CAAC,EACxDM,IAAA,CAACG,KAAK,CAACU,MAAM;UAACC,IAAI,EAAC,OAAO;UAACC,SAAS,EAAElB;QAAU,CAAC,CAAC,EAClDG,IAAA,CAACG,KAAK,CAACU,MAAM;UAACC,IAAI,EAAC,cAAc;UAACC,SAAS,EAAEjB;QAAiB,CAAC,CAAC;MAAA,CAC/C;IAAC,CACC;EAAC,CAGpB,CAAC;AAEX,CAAC;AAED,IAAMS,MAAM,GAAGS,UAAU,CAACC,MAAM,CAAC;EAC/BT,SAAS,EAAE;IACTU,IAAI,EAAE;EAER;AACF,CAAC,CAAC;AACF,eAAed,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}