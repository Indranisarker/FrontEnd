{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Title from \"./Title\";\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport MenuPage from \"./menuPage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar shuffleArray = function shuffleArray(_ref) {\n  var array = _ref.array;\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var _ref2 = [array[j], array[i]];\n    array[i] = _ref2[0];\n    array[j] = _ref2[1];\n  }\n};\nvar AttemptQuiz = function AttemptQuiz(props) {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    questions = _useState2[0],\n    setQuestions = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    quesNo = _useState4[0],\n    setQuesNo = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    options = _useState6[0],\n    setOptions = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    score = _useState8[0],\n    setScore = _useState8[1];\n  useEffect(function () {\n    function fetchQuestions() {\n      return _fetchQuestions.apply(this, arguments);\n    }\n    function _fetchQuestions() {\n      _fetchQuestions = _asyncToGenerator(function* () {\n        try {\n          var courseName = props.route.params.courseName;\n          var response = yield axios.get(`http://10.10.241.122:3000/questions?course=${courseName}`);\n          if (response && response.data && response.data.length > 0) {\n            var filteredQuestions = response.data.filter(function (Questions) {\n              return Questions.select_course === courseName;\n            });\n            if (filteredQuestions.length > 0) {\n              setQuestions(filteredQuestions);\n            } else {\n              console.error('No questions found for the selected course.');\n            }\n          } else {\n            console.error('Fetched data is empty or undefined');\n          }\n        } catch (error) {\n          console.error('Error fetching questions:', error);\n        }\n      });\n      return _fetchQuestions.apply(this, arguments);\n    }\n    fetchQuestions();\n  }, []);\n  var handleNextPress = function handleNextPress() {\n    setQuesNo(quesNo + 1);\n  };\n  var generateOptionsAndShuffle = function generateOptionsAndShuffle(question) {\n    if (!question || !question.options || question.options.length === 0) return [];\n    var options = question.options,\n      correct_answer = question.correct_answer;\n    var newOptions = [].concat(_toConsumableArray(options), [correct_answer]);\n    shuffleArray({\n      array: newOptions\n    });\n    return newOptions;\n  };\n  var handleOptionSelect = function handleOptionSelect(selectedOption) {\n    var correctAnswer = questions[quesNo].correctAnswer;\n    if (selectedOption === correctAnswer) {\n      console.warn('Correct answer!');\n      setScore(score + 2);\n    }\n    if (quesNo !== 4) {\n      setQuesNo(quesNo + 1);\n    }\n  };\n  var showResults = function showResults() {\n    props.navigation.navigate('Result', {\n      score: score\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(MenuPage, {}), _jsx(Title, {}), _jsx(Text, {\n      style: {\n        fontSize: 30,\n        fontWeight: '600',\n        marginBottom: 20,\n        color: 'white'\n      },\n      children: \"Questions\"\n    }), _jsxs(View, {\n      style: styles.modalView,\n      children: [_jsx(View, {\n        children: questions && quesNo < questions.length && _jsxs(Text, {\n          style: {\n            fontSize: 18,\n            fontWeight: '500',\n            marginLeft: 8\n          },\n          children: [\"Q\", quesNo, \". \", questions[quesNo].question]\n        })\n      }), questions && quesNo < questions.length && _jsxs(View, {\n        children: [_jsx(TouchableOpacity, {\n          style: styles.options,\n          onPress: function onPress() {\n            return handleOptionSelect(questions[quesNo].option1);\n          },\n          children: _jsx(Text, {\n            style: styles.optionText,\n            children: `a. ${questions[quesNo].option1}`\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.options,\n          onPress: function onPress() {\n            return handleOptionSelect(questions[quesNo].option2);\n          },\n          children: _jsx(Text, {\n            style: styles.optionText,\n            children: `b. ${questions[quesNo].option2}`\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.options,\n          onPress: function onPress() {\n            return handleOptionSelect(questions[quesNo].option3);\n          },\n          children: _jsx(Text, {\n            style: styles.optionText,\n            children: `c. ${questions[quesNo].option3}`\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.options,\n          onPress: function onPress() {\n            return handleOptionSelect(questions[quesNo].option4);\n          },\n          children: _jsx(Text, {\n            style: styles.optionText,\n            children: `d. ${questions[quesNo].option4}`\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.bottom,\n        children: [quesNo !== 4 && _jsx(TouchableOpacity, {\n          style: styles.button1,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Skip\"\n          })\n        }), quesNo !== 4 && _jsx(TouchableOpacity, {\n          style: styles.button2,\n          onPress: handleNextPress,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Next\"\n          })\n        }), quesNo === 4 && _jsx(TouchableOpacity, {\n          style: styles.button2,\n          onPress: showResults,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Show Result\"\n          })\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#00798c',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 25,\n    marginLeft: 10,\n    marginRight: 10,\n    borderRadius: 10,\n    height: '100%'\n  },\n  modalView: {\n    marginBottom: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 300,\n    height: 400,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    shadowColor: '#bbb',\n    shadowOpacity: 0.80,\n    elevation: 5\n  },\n  options: {\n    paddingVertical: 12,\n    marginRight: 5,\n    paddingHorizontal: 110,\n    backgroundColor: \"#DFE9F1\",\n    borderRadius: 10,\n    marginTop: 10\n  },\n  optionText: {\n    writingDirection: 'ltr',\n    width: \"auto\",\n    fontSize: 15,\n    color: 'black'\n  },\n  bottom: {\n    marginTop: 20,\n    paddingVertical: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  button1: {\n    backgroundColor: '#00b4d8',\n    padding: 10,\n    paddingHorizontal: 25,\n    height: 40,\n    borderRadius: 15,\n    marginHorizontal: 50\n  },\n  button2: {\n    position: 'relative',\n    backgroundColor: '#00b4d8',\n    padding: 10,\n    paddingHorizontal: 25,\n    borderRadius: 15,\n    marginHorizontal: 50\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlign: 'center'\n  }\n});\nexport default AttemptQuiz;","map":{"version":3,"names":["Title","useEffect","useState","axios","MenuPage","jsx","_jsx","jsxs","_jsxs","shuffleArray","_ref","array","i","length","j","Math","floor","random","_ref2","AttemptQuiz","props","_useState","_useState2","_slicedToArray","questions","setQuestions","_useState3","_useState4","quesNo","setQuesNo","_useState5","_useState6","options","setOptions","_useState7","_useState8","score","setScore","fetchQuestions","_fetchQuestions","apply","arguments","_asyncToGenerator","courseName","route","params","response","get","data","filteredQuestions","filter","Questions","select_course","console","error","handleNextPress","generateOptionsAndShuffle","question","correct_answer","newOptions","concat","_toConsumableArray","handleOptionSelect","selectedOption","correctAnswer","warn","showResults","navigation","navigate","View","style","styles","container","children","Text","fontSize","fontWeight","marginBottom","color","modalView","marginLeft","TouchableOpacity","onPress","option1","optionText","option2","option3","option4","bottom","button1","buttonText","button2","StyleSheet","create","backgroundColor","alignItems","justifyContent","marginTop","marginRight","borderRadius","height","width","shadowColor","shadowOpacity","elevation","paddingVertical","paddingHorizontal","writingDirection","flexDirection","padding","marginHorizontal","position","textAlign"],"sources":["D:/Users/project/FrontEnd/QuizApp_02/student_screen/AttemptQuiz.tsx"],"sourcesContent":["import {View, Text, StyleSheet,TouchableOpacity, ScrollView} from 'react-native';\r\nimport Title from './Title';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport MenuPage from './menuPage';\r\n\r\nconst shuffleArray=({array}:{array:any})=> {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n}\r\nconst AttemptQuiz = (props:any) =>{\r\n    const [questions, setQuestions] = useState<Questions[]>([]);\r\n  const [quesNo, setQuesNo] = useState(0);\r\n  const [options, setOptions] = useState<any[]>([]);\r\n  const[score,setScore] = useState(0);\r\n  interface Questions{\r\n    id: number;\r\n    select_course: string;\r\n    question:string;\r\n    option1:string;\r\n    option2:string;\r\n    option3:string;\r\n    option4:string;\r\n    correctAnswer:string\r\n  }\r\n  useEffect(() => {\r\n    async function fetchQuestions() {\r\n      try {\r\n        const { courseName } = props.route.params;\r\n        const response = await axios.get<Questions[]>(`http://10.10.241.122:3000/questions?course=${courseName}`);\r\n        \r\n        if (response && response.data && response.data.length > 0) {\r\n          // Filter questions based on the courseName\r\n          const filteredQuestions = response.data.filter((Questions) => Questions.select_course === courseName) as Questions[];\r\n          if (filteredQuestions.length > 0) {\r\n            setQuestions(filteredQuestions);\r\n            //setOptions(generateOptionsAndShuffle(filteredQuestions));\r\n          } else {\r\n            console.error('No questions found for the selected course.');\r\n          }\r\n        } else {\r\n          console.error('Fetched data is empty or undefined');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching questions:', error);\r\n      }\r\n    }\r\n  \r\n    fetchQuestions();\r\n  }, []);\r\n    const handleNextPress = ()=>{\r\n        setQuesNo(quesNo+1)\r\n        //setOptions(generateOptionsAndShuffle(questions[quesNo+1]))\r\n    }\r\n    interface Question {\r\n        question: string;\r\n        options: string[];\r\n        correct_answer: string;\r\n      }\r\n    const generateOptionsAndShuffle = (question: Question | undefined): string[] => {\r\n        if (!question || !question.options || question.options.length === 0) return [];\r\n        \r\n        const { options, correct_answer } = question;\r\n        const newOptions = [...options, correct_answer];\r\n        shuffleArray({ array: newOptions }); // Assuming shuffleArray mutates the array in place\r\n        return newOptions;\r\n      };\r\n    \r\n      const handleOptionSelect = (selectedOption: string) => {\r\n        const correctAnswer = questions[quesNo].correctAnswer;\r\n        if (selectedOption === correctAnswer) {\r\n          // Logic for correct answer selected\r\n          console.warn('Correct answer!');\r\n            setScore(score+2);\r\n          // You might want to update score or perform other actions\r\n        } \r\n        if(quesNo!==4){\r\n            setQuesNo(quesNo+1)\r\n            //setOptions(generateOptionsAndShuffle(questions[quesNo+1]))\r\n        }\r\n       \r\n    }\r\n    const showResults = ()=>{\r\n        props.navigation.navigate('Result',{score:score})\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n          <MenuPage/>\r\n        <Title/>\r\n        <Text style={{fontSize:30, fontWeight:'600', marginBottom:20,color:'white'}}>Questions</Text>\r\n        <View style={styles.modalView}>\r\n            <View>\r\n        {questions && quesNo < questions.length && (\r\n                    <Text style={{ fontSize: 18, fontWeight: '500', marginLeft: 8 }}>\r\n                    Q{quesNo}. {questions[quesNo].question}\r\n                    </Text>\r\n        )}\r\n                    </View>\r\n                    {questions && quesNo < questions.length && (\r\n                    <View>\r\n                        <TouchableOpacity style = {styles.options} onPress={()=>handleOptionSelect(questions[quesNo].option1)}>\r\n                        <Text style={styles.optionText}>{`a. ${questions[quesNo].option1}`}</Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity style = {styles.options} onPress={()=>handleOptionSelect(questions[quesNo].option2)}>\r\n                        <Text style={styles.optionText}>{`b. ${questions[quesNo].option2}`}</Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity style = {styles.options} onPress={()=>handleOptionSelect(questions[quesNo].option3)}>\r\n                        <Text style={styles.optionText}>{`c. ${questions[quesNo].option3}`}</Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity style = {styles.options} onPress={()=>handleOptionSelect(questions[quesNo].option4)}>\r\n                        <Text style={styles.optionText}>{`d. ${questions[quesNo].option4}`}</Text>\r\n                        </TouchableOpacity>\r\n                      \r\n\r\n                    </View>  \r\n                    )} \r\n\r\n                 <View style={styles.bottom}>\r\n                 {quesNo !== 4 && \r\n                 <TouchableOpacity style={styles.button1}>               \r\n                    <Text style={styles.buttonText}>Skip</Text> \r\n                 </TouchableOpacity>}\r\n          {quesNo !== 4 && \r\n          <TouchableOpacity style={styles.button2} onPress={handleNextPress}>               \r\n          <Text style={styles.buttonText}>Next</Text>\r\n       </TouchableOpacity>\r\n       }\r\n        {quesNo === 4 && \r\n          <TouchableOpacity style={styles.button2} onPress={showResults}>               \r\n          <Text style={styles.buttonText}>Show Result</Text>\r\n       </TouchableOpacity>\r\n       }\r\n        \r\n        </View>              \r\n\r\n    \r\n\r\n</View>\r\n</View>\r\n\r\n    )\r\n}\r\n        \r\n    \r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        backgroundColor: '#00798c',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginTop:25,\r\n        marginLeft:10,\r\n        marginRight:10,\r\n        borderRadius:10,\r\n        height:'100%'\r\n        \r\n       },\r\n       modalView:{\r\n       marginBottom:20,\r\n       justifyContent:'center',\r\n       alignItems:'center', \r\n       width:300,\r\n       height:400,\r\n       backgroundColor:'white',\r\n       borderRadius:20,\r\n       shadowColor:'#bbb',\r\n       shadowOpacity:0.80,\r\n       elevation:5\r\n   },\r\n   options:{\r\n    paddingVertical: 12,\r\n    marginRight:5,\r\n   paddingHorizontal:110,\r\n    //width:'85%',\r\n    backgroundColor:\"#DFE9F1\",\r\n    borderRadius:10,\r\n    marginTop:10,\r\n   \r\n   },\r\n   optionText:{\r\n    writingDirection:'ltr',\r\n    width:\"auto\",\r\n    fontSize:15,\r\n    color:'black'\r\n   },\r\n   bottom:{\r\n    marginTop:20,\r\n    paddingVertical:20,\r\n    flexDirection:'row',\r\n    justifyContent:'space-between',\r\n   },\r\n   button1:{\r\n    //position:'relative',\r\n    backgroundColor:'#00b4d8',\r\n    padding:10,\r\n    paddingHorizontal:25,\r\n    height:40,\r\n    borderRadius:15,\r\n    marginHorizontal:50\r\n},\r\nbutton2:{\r\n    position:'relative',\r\n    backgroundColor:'#00b4d8',\r\n    padding:10,\r\n    paddingHorizontal:25,\r\n    borderRadius:15,\r\n    marginHorizontal:50\r\n},\r\nbuttonText:{\r\n    color:'#fff',\r\n    fontSize:15,\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    textAlign:'center'\r\n    \r\n},\r\n})\r\nexport default AttemptQuiz;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}